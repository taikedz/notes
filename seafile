#!/bin/bash

# ============================ LICENSE ==============================
#
# Seafile Installer
#   Copyrigth 2015 Tai Kedzierski
#
# This software is Free Software, provided to you under the terms of
# the GNU General Public License
# 
# For details, see https://www.gnu.org/licenses/gpl-3.0.html
#
# In summary:
#
# The license allows you to:
#   * Run, distribute, modify and distribute your modifications of
#     this program
#   * Add your name as an author if you modify the code
#
# The license requires that you
#   * Deliver human-readable non-obfuscated code for this program
#     on request if you choose to distribute it
#   * Retain the present copyright notice
#
# The license prohibits you from
#   * Prohibiting the use of your distribution of this program under
#     any arbitrary conditions
#   * Re-licensing the software under a less permissive license
#     (permissiveness applying to the use and re-use of the program)
#     or under a license otherwise incompatible with the GPLv3
#   * Denying access to the unobfuscated source code of a version
#     of the program that you choose to distribute
#   * Removing this copyright notice, and its stated authors
# 
# ===================================================================

function log {
	echo "$@" 1>&2
}

[[ $(uname -a | grep 'Ubuntu' | wc -l) != 1 ]] && {
	log "This does not seem to be an Ubuntu based system - please be aware that this script is designed solely with Ubuntu 14.04+ in mind."
}

helppat='help|--help|-h'
[[ "$1" =~ $helppat ]] && {
cat <<EOHELP

Seafile Installer

This installer will install and setup Seafile with Apache and HTTPS
on a Ubuntu 14.04 system.

Note that you will will need to edit

    /etc/apache2/sites-available/default-ssl.conf

to use the correct certificate; this tool does not configure
certificates.

This installer downloads the latest Seafile package from the official
website, and runs its install script interactively, as well as
installing all dependencies from APT repository.

Last tested with Seafile 4.3.2

Run "$0" without arguments to start the install.

EOHELP
exit
}

if [[ -z "$1" ]]; then
echo "This is an interactive installer - it cannot be run unattended.
Press any key to continue, or ^C to abort."
read foo

	# ========================================
	# Needs root

	[[ $UID != 0 ]] && {
		log "You need to be root for that"
		exit 1
	}

	set -e
	log "Installing dependencies"
	apt-get update
	apt-get install mariadb-server apache2 python2.7 python-setuptools python-imaging python-mysqldb python-flup libapache2-mod-fastcgi
	set +e
	# deactivated error bailout as some of these may already be active and return error onn re-attempting to activate them
	a2enmod rewrite
	a2enmod fastcgi
	a2enmod proxy_http
	a2enmod ssl

	set -e
	log "Setting up FastCGI in Apache conf"
	grep 'FastCGIExternalServer /var/www/html/seahub.fcgi -host 127.0.0.1:8000' /etc/apache2/apache2.conf || {
		cat <<EOF >> /etc/apache2/apache2.conf

# Seafile
FastCGIExternalServer /var/www/html/seahub.fcgi -host 127.0.0.1:8000
EOF
	}


	OLDFILE=/etc/apache2/sites-available/default-ssl.conf
	NEWFILE=/etc/apache2/sites-available/default-ssl-seafile.conf
	cat <<EOF > $NEWFILE
$(cat $OLDFILE | grep -v '</VirtualHost>')

  # Seafile additional configuration

  Alias /media  /home/seafile/myfiles/seafile-server-latest/seahub/media

  RewriteEngine On

  #
  # seafile fileserver
  #
  ProxyPass /seafhttp http://127.0.0.1:8082
  ProxyPassReverse /seafhttp http://127.0.0.1:8082
  RewriteRule ^/seafhttp - [QSA,L]

  #
  # seahub
  #
  RewriteRule ^/(media.*)$ /\$1 [QSA,L,PT]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteRule ^/(seafile.*)$ /seahub.fcgi/\$1 [QSA,L,E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
</VirtualHost>
EOF
	log "Deactivating $OLDFILE and activating $NEWFILE apache sites"
	set +e
	# in case it wasn't already active
	a2dissite default-ssl
	set -e
	a2ensite default-ssl-seafile

	# ---------------------------------------
	log "Creating seafile user"
	[[ $(grep -E '^seafile:' /etc/passwd | wc -l) = 1 ]] || adduser seafile
	cp "$0" ~seafile/
	sfinstaller=$(basename $0)
	chown seafile:seafile ~seafile/$sfinstaller

	su - seafile -c "bash '$sfinstaller' usetup" && {
		service apache2 restart
		bash ~seafile/myfiles/restart-seahub
	}
	rm ~seafile/$sfinstaller
fi

if [[ "$1" = "usetup" ]]; then
	# ========================================
	# Switch to seafile user
	cd $HOME
	mkdir myfiles
	cd myfiles
	log "Operating in $PWD"

	#Download latest server
	dlurl=$(pat='https://[^ ]+seafile-server[^ ]+x86-64.tar.gz'; wget --quiet -O - https://www.seafile.com/en/download/ | grep -E "$pat" | sed -r "s%^.+?($pat).+\$%\1%")
	[[ -n "$dlurl" ]] || {
		log "Could not get URL for newest Seafile"
		exit 3
	}
	log "Downloading latest Seafile server $dlurl"
	wget $dlurl
	tar xzf $(basename $dlurl)
	# stash the installer
	mkdir pkg
	mv $(basename $dlurl) pkg/

	# ========================================
	# Run setup

	log "Setting up database - questions follow:"
	cd seafile-server-*/
	./setup-seafile-mysql.sh # interactive


	# ========================================
	# Create restart tool

	log "Creating restart script"
	cat <<EOF > ../restart-seahub
#!/bin/bash

# Perform action as seafile user
( [[ \$UID = 0 ]] || [[ \$(whoami) != seafile ]] ) && {
	su seafile -c "\$PWD/\$0"
	exit
}

set -e
seafile-server-latest/seahub.sh stop
seafile-server-latest/seafile.sh stop
seafile-server-latest/seafile.sh start
seafile-server-latest/seahub.sh start-fastcgi
set +e
EOF

	# ========================================
	# Get the server details

	isok=0
	urlpat='^[a-zA-Z0-9.-]+$'
	while true; do
		read -p "What is the Fully Qualified Domain Name of the server? (ex: foo.bar.net) > " SERVNAME 1>&2
		if [[ $SERVNAME =~ $urlpat ]]; then
			echo "https://$SERVNAME" > /tmp/servname # while loop has its own darn scope
			break
		else
			log "Invalid domain name $SERVNAME (regex to match is $urlpat)"
		fi
	done

	SERVNAME=$(cat /tmp/servname)
	cd seafile-server-latest
	log "Updating ccnet/ccnet.conf and seahub_settings.py"
	cp ccnet/ccnet.conf ccnet/ccnet.conf.bak
	cp seahub_settings.py seahub_settings.py.bak
	# and what if they don't exist yet?
	# also the first line doesn't seem to work...
	sed -r -e "s|SERVICE_URL *=.+|SERVICE_URL=$SERVNAME/seafile|" -i ccnet/ccnet.conf 
	sed -r -e "s|FILE_SERVER_ROOT *=.+|FILE_SERVER_ROOT=\"$SERVNAME/seafhttp\"|" -i seahub_settings.py
	# ========================================
	log "Initial setup complete"
fi
